/*!
* @erwinstone/bs-toast v1.0.1 (https://bs-toast.vercel.app/)
* Copyright 2021 erwinstone
* Licensed under MIT (https://github.com/erwinstone/bs-toast/blob/master/LICENSE)
*/(function(a,o){typeof exports=="object"&&typeof module!="undefined"?module.exports=o():typeof define=="function"&&define.amd?define(o):(a=typeof globalThis!="undefined"?globalThis:a||self,a.BsToast=o())})(this,function(){"use strict";class a{#h;#e;#n;#l;#r;#d;#c;#u;#o;#f;#i;#m="btn-close";#b="toast-header";#a="hidden";#s;toast;bootstrapToast;constructor(t){this.#h=this.#t(t.body,""),this.#e=this.#t(t.animation,!0),this.#n=this.#t(t.autohide,!0),this.#l=this.#t(t.btnClose,!0),this.#r=this.#t(t.btnCloseWhite,!1),this.#d=this.#t(t.className,""),this.#c=this.#t(t.delay,5e3),this.#u=this.#t(t.gap,16),this.#o=this.#t(t.header,""),this.#f=this.#t(t.margin,"1rem"),this.#i=this.#t(t.placement,"top-right"),this.#s=this.#i.split("-"),this.#y(),this.#$()}#y(){const t=`<button type="button" class="${this.#m} flex-shrink-0" data-bs-dismiss="toast" aria-label="Close" ${this.#a}></button>`,e=`style="margin:${this.#f};${this.#s[0]}:0;${this.#s[1]}:${this.#e?"-50%":0};z-index:1081"`,i=document.createElement("template");i.innerHTML=`<div class="toast position-fixed toast-${this.#i} ${this.#d}" ${e} role="alert" aria-live="assertive" aria-atomic="true">
				<div class="${this.#b}" ${this.#a}><div class="d-flex align-items-center flex-grow-1">${this.#o}</div>${t}</div>
				<div class="toast-body"><div class="d-flex w-100"><div class="flex-grow-1">${this.#h}</div>${t}</div></div>
			</div>`;const s=i.content.firstChild;if(s instanceof HTMLDivElement){const h=s.querySelectorAll(`.${this.#m}`);h.forEach(n=>{this.#l&&n.removeAttribute(this.#a),this.#r&&n.classList.add("btn-close-white")}),this.#o!==""&&(s.querySelector(`.${this.#b}`).removeAttribute(this.#a),h[1].remove()),this.toast=s}document.body.insertAdjacentElement("afterbegin",this.toast),this.bootstrapToast=new bootstrap.Toast(this.toast,{animation:this.#e,autohide:this.#n,delay:this.#c})}#$(){this.toast.addEventListener("hidden.bs.toast",()=>{this.toast.remove(),this.#v()}),this.toast.addEventListener("show.bs.toast",()=>{let t=this,e=setInterval(i,0);function i(){if(t.toast.offsetHeight>0){if(clearInterval(e),t.#e){const s=parseFloat(getComputedStyle(t.toast).transitionDuration)*1e3;t.toast.style.transition=`all ${s*4}ms cubic-bezier(0.16, 1, 0.3, 1), opacity ${s}ms linear`,t.toast.style[t.#s[1]]=0}t.#v()}}})}#v(){const t=document.body.querySelectorAll(`.toast-${this.#i}`);let e=[];t.forEach((i,s)=>{i instanceof HTMLElement&&(s===0&&e.push(0),t[s+1]instanceof HTMLElement&&e.push(e[s]+i.offsetHeight),i.style[this.#s[0]]=e[s]+this.#u*s+"px")})}#t(t,e){return t!==void 0?t:e}show(){this.bootstrapToast.show()}hide(){this.bootstrapToast.hide()}}return a});
